import { prisma } from "../index";import { Prisma } from "@prisma/client";import { SessionStatus } from "@prisma/client";export async function getAllSessions() {	try {		return await prisma.session.findMany();	} catch (error) {		console.error('Error fetching sessions:', error);		throw error;	}}export async function updateSession(	sessionId: string,	theme?: string,	duration?: number,	startDate?: Date,	endDate?: Date,	price?: number,	minimalClient?: number,	status?: SessionStatus) {	try {		const data: Prisma.SessionUpdateInput = {};				if (theme) data.theme = theme;		if (duration) data.duration = duration;		if (startDate) data.startDate = startDate;		if (endDate) data.endDate = endDate;		if (price) data.price = price;		if (minimalClient) data.minimalClient = minimalClient;		if (status) data.status = status;				const updatedSession = await prisma.session.update({			where: {				id: sessionId,			},			data,		});		return updatedSession;	} catch (error) {		console.error('Error updating session:', error);		throw error;	}}export async function deleteSession(sessionId: string) {	try {		await prisma.session.update({			where: {				id: sessionId,			},			data: {				employee: {					set: [],				},			},		});				const deletedSession = await prisma.session.delete({			where: {				id: sessionId,			},			include: {				group: true,			},		});				if (deletedSession.group) {			await prisma.group.delete({				where: {					id: deletedSession.group.id,				},			});		}				return deletedSession;	} catch (error) {		console.error('Error deleting session:', error);		throw error;	}}export async function createSession(	theme: string,	duration: number,	startDate: Date,	endDate: Date,	price: number,	minimalClient: number,	status: SessionStatus) {	try {		const createdSession = await prisma.session.create({			data: {				theme,				duration,				startDate,				endDate,				price,				minimalClient,				status,			},		});				return createdSession;	} catch (error) {		console.error('Error creating session:', error);		throw error;	}}